install.packages("plyr")
library(plyr)
ddply(data.m, .(category), summarize, ratio=count/sum(count))
head(pop_btc_group)
ddply(pop_btc_group, continent, summarise, ratio = COUNT/SUM(COUNT))
class(data.m)
data.m
ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/SUM(COUNT))
ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/sum(COUNT))
sum()
ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/sum(COUNT))
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/sum(COUNT))
class(continent_ratio)
head(pop_btc_group)
tail(pop_btc_group)
pop_btc_ratio = data.frame(pop_btc_group, continent_ratio)
head(pop_btc_ratio)
pop_btc_ratio
pop_btc_ratio = data.frame(pop_btc_group, continent_ratio[,ratio])
pop_btc_ratio = data.frame(pop_btc_group, continent_ratio$ratio)
pop_btc_ratio
pop_btc_ratio = data.frame(pop_btc_group, ratio = continent_ratio$ratio)
pop_btc_ratio
ddply(pop_btc_ratio, .(continent), transform, position = cumsum(COUNT) - 0.5*COUNT)
# get positions of percentage labels:
pop_btc_ratio = ddply(pop_btc_ratio, .(continent), transform, position = cumsum(COUNT) - 0.5*COUNT)
factor(1)
ggplot(pop_btc_ratio) + geom_bar(aes(x=continent, fill=PopGroup)) + coord_polar(theta = "y")
#Load necessary libraries
library(shiny)
library(tidyverse)
library(dplyr)
library(shinydashboard)
ggplot(pop_btc_ratio) + geom_bar(aes(x=continent, fill=PopGroup)) + coord_polar(theta = "y")
ggplot(pop_btc_ratio) + geom_bar(aes(x=factor(1), fill=PopGroup)) + coord_polar(theta = "y")
ggplot(pop_btc_ratio) + geom_bar(aes(x=factor(1), y=COUNT)) + coord_polar(theta = "y")
ggplot(pop_btc_ratio) + geom_bar(aes(x=factor(1), y=COUNT, fill = as.factor(Popularity)))) + coord_polar(theta = "y")
ggplot(pop_btc_ratio) + geom_bar(aes(x=factor(1), y=COUNT, fill = as.factor(Popularity))) + coord_polar(theta = "y")
pop_btc_ratio %>% head()
ggplot(pop_btc_ratio) + geom_bar(aes(x=factor(1), y=COUNT, fill = as.factor(ratio))) + coord_polar(theta = "y")
gplot(mydf, aes(x = factor(1), y = COUNT, fill = as.factor(ratio))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~category)
ggplot(mydf, aes(x = factor(1), y = COUNT, fill = as.factor(ratio))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~category)
ggplot(pop_btc_ratio, aes(x = factor(1), y = COUNT, fill = as.factor(ratio))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~category)
ggplot(pop_btc_ratio, aes(x = continent, y = COUNT, fill = as.factor(ratio))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~category)
ggplot(pop_btc_ratio, aes(x = factor(1), y = COUNT, fill = as.factor(ratio))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent)
head(pop_btc_group)
ggplot(pop_btc_ratio, aes(x = factor(1), y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent)
ggplot(pop_btc_ratio, aes(x = factor(2), y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent)
ggplot(pop_btc_ratio, aes(x = factor(0), y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent)
ggplot(pop_btc_ratio, aes(x = factor(1), y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent)
ggplot(pop_btc_ratio, aes(x = factor(1), y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent) + coord_polar(theta = "y")
ggplot(pop_btc_ratio, aes(x = continent, y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity", width = 1) +
facet_wrap(~continent) + coord_polar(theta = "y")
ggplot(pop_btc_ratio, aes(x = continent, y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") +
facet_wrap(~continent) + coord_polar(theta = "y")
ggplot(pop_btc_ratio, aes(x = continent, y = COUNT, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity")
head(pop_btc_ratio)
pop_btc_ratio = pop_btc_ratio = mutate(value = COUNT)
pop_btc_ratio = pop_btc_ratio %>% mutate(value = COUNT)
head(pop_btc_ratio)
pop_btc_group = as.data.frame(pop_btc %>% group_by(continent, PopGroup) %>% summarise(COUNT=n()))
pop_btc_group = pop_btc_group %>% arrange(continent, PopGroup)
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/sum(COUNT))
pop_btc_ratio = data.frame(pop_btc_group, ratio = continent_ratio$ratio)
continent_ratio
pop_btc_group = as.data.frame(pop_btc %>% group_by(continent, PopGroup) %>% summarise(COUNT=n()))
pop_btc_group = pop_btc_group %>% arrange(continent, PopGroup)
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(COUNT/sum(COUNT)))
#Read bitcoin popularity by country data
pop_btc = read.csv(file = 'bitcoin_interest_by_country_5_years.csv', header = T, sep = ',', stringsAsFactors = F)
#Set wd
setwd("C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/data")
#Read bitcoin popularity by country data
pop_btc = read.csv(file = 'bitcoin_interest_by_country_5_years.csv', header = T, sep = ',', stringsAsFactors = F)
#Google geochart does not allow null values. Eliminate nulls!
pop_btc = pop_btc %>% filter(!is.na(Popularity))
#Group popularity index to visualize by continent
pop_btc = pop_btc %>% mutate(PopGroup = (if_else(
Popularity <= 10,
'0-10',
if_else(
Popularity <= 20,
'10-20',
if_else(
Popularity <= 40,
'20-40',
if_else(Popularity <= 60, '40-60', '60-100')
)
)
)))
#Read country-continent mapping table
continent = read.csv(file = 'countryContinent.csv', header = T, sep = ',', stringsAsFactors = F)
continent = continent %>% mutate(Country = country)
#Add Continent to the popularity data to visualize in the faceted piechart
pop_btc=pop_btc %>% inner_join(continent, by = 'Country') %>% select(Country, continent, Popularity, PopGroup)
pop_btc_group = as.data.frame(pop_btc %>% group_by(continent, PopGroup) %>% summarise(COUNT=n()))
pop_btc_group = pop_btc_group %>% arrange(continent, PopGroup)
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(COUNT/sum(COUNT)))
library(plyr)
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(COUNT/sum(COUNT)))
pop_btc_group = as.data.frame(pop_btc %>% group_by(continent, PopGroup) %>% summarise(value=n()))
pop_btc_group = pop_btc_group %>% arrange(continent, PopGroup)
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(COUNT/sum(COUNT)))
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(value/sum(value)))
pop_btc_group
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = value/sum(value))
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = value/sum(value))
pop_btc_group
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio=value/sum(value))
ddply(pop_btc_group, .(continent), summarise, ratio=value/sum(value))
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(COUNT/sum(COUNT)))
continent_ratio = ddply(pop_btc_group, .(continent), summarise, ratio = round(value/sum(value)))
ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/SUM(COUNT))
ddply(pop_btc_group, .(continent), summarise, ratio = COUNT/sum(COUNT))
ddply(pop_btc_group, .(continent), summarise, ratio = value/sum(value))
pop_btc_group
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
pop_btc_group
continent_ratio
ddply(pop_btc_group, .(continent), summarise, ratio=value/sum(value))
ddply(pop_btc_group, continent, summarise, ratio=value/sum(value))
ddply(pop_btc_group, .(PopGroup), summarise, ratio=value/sum(value))
class(pop_btc_group)
class(pop_btc)
pop_btc_group
company <-c(rep(c(rep("company1",4),rep("company2",4),rep("company3",4)),3))
product<-c(rep(c(rep(c("product1","product2","product3","product4"),3)),3))
week<-c( c(rep("w1",12),rep("w2",12),rep("w3",12)))
mydata<-data.frame(company=company,product=product,week=week)
mydata$rank<-c(rep(c(1,3,2,3,2,1,3,2,3,2,1,1),3))
mydata=mydata[mydata$company=="company1",]
library(ggplot2)
library(plyr)
mydata = mydata[,c(3,4)] #drop unnecessary variables
mydata
data.m = melt(table(mydata))
data.m
pop_btc_group
pop_btc_group %>% mutate(rank = if_else(PopGroup == '0-10', 1, if_else(PopGroup == '10-20', 2, if_else(PopGroup == '20-40', 3, if_else(PopGroup == '40-60', 4, 5)))))
pop_btc_group2 = pop_btc_group %>% mutate(rank = if_else(PopGroup == '0-10', 1, if_else(PopGroup == '10-20', 2, if_else(PopGroup == '20-40', 3, if_else(PopGroup == '40-60', 4, 5))))) %>% select(continent, rank, value)
pop_btc_group2
ddply(pop_btc_group2, .(continent), summarize, ratio=value/sum(value))
ddply(pop_btc_group2, .(continent), min, ratio=value/sum(value))
min
ddply(pop_btc_group2, .(continent), min, ratio=value/sum(value))
head(pop_btc_group2)
ddply(pop_btc_group2, .(continent), min, ratio=value/sum(value))
ddply(pop_btc_group2, .(continent), min, ratio=pop_btc_group2$value/sum(pop_btc_group2$value))
ddply(pop_btc_group2, .(continent), summarise, ratio=pop_btc_group2$value/sum(pop_btc_group2$value))
ddply(pop_btc_group2, "continent", summarise, ratio=pop_btc_group2$value/sum(pop_btc_group2$value))
pop_btc_group2
ddply(pop_btc_group2, c("continent","rank"), summarise, ratio=pop_btc_group2$value/sum(pop_btc_group2$value))
ddply(pop_btc_group2, c("continent","rank"), summarise, ratio=sum(pop_btc_group2$value))
ddply(pop_btc_group2, c("continent"), summarise, ratio=sum(pop_btc_group2$value))
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
dfx
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
head(pop_btc)
ddply(pop_btc, .(continent, PopGroup), summarise, freq=count())
ddply(pop_btc, .(continent, PopGroup), summarise, freq=count(Country))
ddply(pop_btc, .(continent, PopGroup), summarise, freq=sum(n(Country)))
ddply(pop_btc, .(continent, PopGroup), summarise, freq=sum(n()))
a=ddply(pop_btc, .(continent, PopGroup), summarise, freq=sum(n()))
ddply(a, .(continent), summarize, ratio=value/sum(value))
ddply(a, .(continent), summarize, ratio=freq/sum(freq))
a=ddply(pop_btc, .(continent, PopGroup), summarise, value=sum(n()))
a
melted_a = melt(table(a))
melted_a
a=ddply(pop_btc, .(continent, PopGroup), summarise, tot=sum(n()))
melted_a = melt(table(a))
melted_a
melted_a
a
ddply(a, .(continent), summarize, ratio=count/sum(count))
ddply(a, .(continent), summarize, ratio=tot/sum(tot))
a %>% group_by(continent) %>% summarise(sum(tot))
a %>% group_by(continent) %>% summarise(tot/sum(tot))
b = a %>% group_by(continent) %>% summarise(sum(tot))
b
b = data.frame(a %>% group_by(continent) %>% summarise(sum(tot)))
b
b = data.frame(a %>% group_by(continent) %>% summarise(total = sum(tot)))
b
a
a %>% mutate(total = if_else(continent == 'Africa', b$total))
a %>% mutate(total = if_else(continent == 'Africa', 55))
a %>% mutate(total = if_else(continent == 'Africa', 55, 100))
a %>% inner_join(b, by = 'continent')
c = a %>% inner_join(b, by = 'continent')
c
d = c %>% mutate(ratio = round(tot/total))
d
d = c %>% mutate(ratio = round(tot/total*100))
d
d
d = c %>% mutate(ratio = tot/total))
d = c %>% mutate(ratio = tot/total)
d
d = c %>% mutate(ratio = round(tot/total,2))
d
ggplot(d,aes(x = continent, y = tot, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + facet_wrap(~continent)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + facet_wrap(~continent) + coord_polar(theta = "y")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent)
d
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, scales='free')
d
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, shrink = FALSE)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, shrink = TRUE)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "y")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "both")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "y")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", drop=FALSE)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", drop=TRUE)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", direction = 'v')
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", direction = "v")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", direction = "h")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", drop=TRUE)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(vars(continent, PopGroup), switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
d
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", labeller = "label_both")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", strip.position = "bottom")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", strip.position = "left")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x", strip.position = "bottom")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(stat = "identity") + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x") + theme(strip.background = element_blank(), strip.placement = "outside")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_col() + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x") + theme(strip.background = element_blank(), strip.placement = "outside")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_col()
d
d$ratio
d$ratio = if_else(continent == 'Africa' & PopGroup == '0-10', 0.34, d$ratio)
d = d %>% mutate(ratio = if_else(continent == 'Africa' & PopGroup == '0-10', 0.34, d$ratio))
d
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_col()
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_col() + coord_polar(theta = "y") + facet_wrap(~continent, switch = "x") + theme(strip.background = element_blank(), strip.placement = "outside")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_col() + coord_polar(theta = "y")
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_col() + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = continent, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 1, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 1, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 5, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + coord_polar(theta = "y") + facet_grid(~continent)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_grid(~continent) + coord_polar(theta = "y")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_grid(~continent) + coord_polar(theta = "y") + labs(x=NULL,y=NULL)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_grid(~continent, nrow=3) + coord_polar(theta = "y") + labs(x=NULL,y=NULL)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=3) + coord_polar(theta = "y") + labs(x=NULL,y=NULL)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.25)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "New Legend Title")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme(axis.text = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme(panel.grid  = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme(panel.grid  = element_blank(), axis.ticks = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + geom_vline('None')
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + geom_vline(aes('None'))
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y", start = 0, direction = 1) + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + geom_vline(xintercept = seq(0, 360-1, by = 45), colour = "grey90", size = 0.2)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group")
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw()
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw() + theme(axis.text.y = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw() + theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw() + theme(axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.grid  = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw() + theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw() + theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) + geom_vline(xintercept = seq(0, 360-1, by = 45), colour = "grey90", size = 0.2)
ggplot(d,aes(x = 2, y = ratio, fill = as.factor(PopGroup))) +
geom_bar(position = 'fill', stat = 'identity') + facet_wrap(~continent, nrow=2) + coord_polar(theta = "y") + labs(x=NULL,y=NULL) + xlim(0.5, 2.5) + scale_fill_discrete(name = "Popularity Index Group") + theme_bw() + theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
a
as.data.frame(pop_btc %>% group_by(continent, PopGroup) %>% summarise(tot=n()))
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
end_price=0.079262
start_price=0.000242
perc = round(((end_price-start_price)/start_price)*100, 2)
perc
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
all_coins %>% filter(name == 'NEM') %>% head()
all_coins %>% filter(name == 'NEM' & date == '2015-04-01')
all_coins %>% filter(name == 'NEM' & date == '2015-04-01') %>% select(close)
write.csv(x = 0.000242, file = 'test.csv')
getwd()
read.csv(file = './test.csv', sep = ',', stringsAsFactors = F)
a=read.csv(file = './test.csv', sep = ',', stringsAsFactors = F)
class(a)
str(a)
#Load coin market data
all_coins = read.csv(file = 'crypto-markets.csv', header = T, sep = ',', stringsAsFactors = F)
all_coins %>% filter(name == 'NEM' & date == '2015-04-01') %>% select(close)
runApp('C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code')
setwd("C:/Users/hilmiuysal/Desktop/NYC Data Science Academy/Projects/Shiny/Cryptograph/Code")
#connect to database
conn <- dbConnect(drv = SQLite(),
dbname = dbname)
#Drop table
dbRemoveTable(conn, tbl_venues)
dbRemoveTable(conn, tbl_coins)
#SQLite DB name
dbname = "./cryptograph.sqlite"
#SQLite venues table name
tbl_venues = "venues"
#SQLite coins table name
tbl_coins = "coins"
#write table
dbWriteTable(conn = conn,
name = tbl_venues,
value = df_venues)
#write table
dbWriteTable(conn = conn,
name = tbl_coins,
value = all_coins)
#List tables
dbListTables(conn)
#Disconnect from DB
dbDisconnect(conn)
runApp()
all_coins %>% filter(name == 'NEM' & date == '2015-04-01') %>% select(close)
sqlite_coins() %>% filter(name == 'NEM' & date == '2015-04-01') %>% pull(close)
head(all_coins)
all_coins %>% filter(close == 0)
all_coins %>% filter(close == 134.21)
all_coins %>% filter(close == 0.0)
all_coins %>% filter(close == 0.000)
all_coins %>% filter(close == 0.00)
all_coins %>% filter(close == 0.0001)
runApp()
runApp()
xtable(prettyNum(enrollment.summary,big.mark=","))
prettyNum(all_coins$close,big.mark=",")
a = all_coins %>% filter(close > 1000) %>% head()
a
prettyNum(a$close,big.mark=",")
prettyNum(a$market,big.mark=",")
?prettyNum
prettyNum(a$market,big.mark=",")
b = prettyNum(a$market,big.mark=",")
class(b)
runApp()
runApp()
prettyNum(round(end_price/start_price*100), big.mark = ",")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
